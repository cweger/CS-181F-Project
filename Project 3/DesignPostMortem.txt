Report Author: Michael Vassilevsky
Group Members: Eli Gadd, Chet Weger


Post-Mortem


        No changes to the architecture were necessary, because the components were well-abstracted and simple compared to our original product description. The specifications were done on schedule without any issues. Work on them was divided individually among the group members. However, the resulting specifications weren’t very detailed and initially there was only one Django model - the user table - because of lack of familiarity with Django.
        The three component designs were likewise divided among individual group members. Chet put together a prototype, which was helpful in understanding the general design of our components. There was a meeting in which much of the specifics of how Django works were discussed and our understanding was improved. Chet did research on Django and explained it to Eli and Michael, which meant the group as a whole had less redundancy, but slowed the spread of information. Also, the Django tutorial we used, though reasonably detailed, was based on an out-of-date version of Django. Overall, learning how Django works was an obstacle in this part of the project, and caused delays.
        When it came to the test plans, we had some difficulty understanding what to test, because so much of our design was dependent on Django. We had a helpful meeting with Professor Kampe, in which we discussed how to test the Django models. The work was again split up among the individual members. There was some difficulty with white box testing on the Edit page, which caused those tests to be less detailed.
        The design reviews were very useful, though somewhat rushed because of lack of time. Significant improvements were suggested, design mistakes were detected, and improvements suggested. The suggested improvements did not require a significant reworking of the current designs, but the corrections resulting from them were significant.
        We experienced considerable schedule slip after the specifications were written, which had two primary causes. First, Django was foreign to us, and familiarizing ourselves with it reduced productivity significantly. Second, there was little enforcement of internally set deadlines. There were also some communication issues around one of the meetings.
        The project was useful as an educational exercise, though we had to learn a new framework. It would have been useful to know up-front (at the beginning of the class) how much knowledge we needed to know about design. It would have been helpful to talk to people who had used Django before. We had little familiarity with Django, and learning how to use it was frustrating. If we had known what had been required of us, we would perhaps have chosen a different project, or at least a different architecture. It was, however, an educational experience, and now we are more familiar with a widely used web framework.